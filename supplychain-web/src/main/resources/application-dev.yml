# 开发环境
spring:
  datasource:
      url: jdbc:sqlserver://192.168.3.222:1433
      password: testERP
      username: testERP
      driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
      platform: mysql
      type: com.alibaba.druid.pool.DruidDataSource
      druid:
        initialSize: 10
        minIdle: 3
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 30000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  # redis 配置
  redis:
    host: 127.0.0.1
    database: 0
    port: 6379
    jedis:
      pool:
        # 连接池最大连接数
        max-active: 50
        # 连接池最大阻塞等待时间
        max-wait: 2000ms
        # 连接池中的最大空闲连接
        max-idle: 20
        # 连接池中的最小空闲连接
        min-idle: 5
    # 连接超时时间
    timeout: 10000ms
  # mongodb 配置
  data:
    mongodb:
       host: 127.0.0.1
       port: 27017
       database: testDb
       username: root
       password: 123456

logging:
  level:
     com.xinyonghang.supplychain.dao: debug

#server:
#  servlet:
#    context-path: /spring-boot


 #上传图片路径
image:
  upload:
      path: e://uploadImage/